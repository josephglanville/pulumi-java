// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nestedTypes.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class NestedType {
    private List<List<List<String>>> data;
    private @Nullable Map<String,Map<String,Map<String,String>>> nestedMaps;

    private NestedType() {}
    public List<List<List<String>>> data() {
        return this.data;
    }
    public Map<String,Map<String,Map<String,String>>> nestedMaps() {
        return this.nestedMaps == null ? Map.of() : this.nestedMaps;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NestedType defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<List<List<String>>> data;
        private @Nullable Map<String,Map<String,Map<String,String>>> nestedMaps;
        public Builder() {}
        public Builder(NestedType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.data = defaults.data;
    	      this.nestedMaps = defaults.nestedMaps;
        }

        @CustomType.Setter
        public Builder data(List<List<List<String>>> data) {
            if (data == null) {
              throw new MissingRequiredPropertyException("NestedType", "data");
            }
            this.data = data;
            return this;
        }
        @CustomType.Setter
        public Builder nestedMaps(@Nullable Map<String,Map<String,Map<String,String>>> nestedMaps) {

            this.nestedMaps = nestedMaps;
            return this;
        }
        public NestedType build() {
            final var _resultValue = new NestedType();
            _resultValue.data = data;
            _resultValue.nestedMaps = nestedMaps;
            return _resultValue;
        }
    }
}
