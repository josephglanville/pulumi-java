// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.myedgeorder.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class Pav2MeterDetailsResponse {
    /**
     * @return Represents billing type.
     * Expected value is &#39;Pav2&#39;.
     * 
     */
    private String billingType;
    /**
     * @return Charging type.
     * 
     */
    private String chargingType;
    /**
     * @return Validation status of requested data center and transport.
     * 
     */
    private String meterGuid;
    /**
     * @return Billing unit applicable for Pav2 billing
     * 
     */
    private Double multiplier;

    private Pav2MeterDetailsResponse() {}
    /**
     * @return Represents billing type.
     * Expected value is &#39;Pav2&#39;.
     * 
     */
    public String billingType() {
        return this.billingType;
    }
    /**
     * @return Charging type.
     * 
     */
    public String chargingType() {
        return this.chargingType;
    }
    /**
     * @return Validation status of requested data center and transport.
     * 
     */
    public String meterGuid() {
        return this.meterGuid;
    }
    /**
     * @return Billing unit applicable for Pav2 billing
     * 
     */
    public Double multiplier() {
        return this.multiplier;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Pav2MeterDetailsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String billingType;
        private String chargingType;
        private String meterGuid;
        private Double multiplier;
        public Builder() {}
        public Builder(Pav2MeterDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.billingType = defaults.billingType;
    	      this.chargingType = defaults.chargingType;
    	      this.meterGuid = defaults.meterGuid;
    	      this.multiplier = defaults.multiplier;
        }

        @CustomType.Setter
        public Builder billingType(String billingType) {
            if (billingType == null) {
                throw new MissingRequiredPropertyException("Pav2MeterDetailsResponse", "billingType");
            }
            this.billingType = billingType;
            return this;
        }
        @CustomType.Setter
        public Builder chargingType(String chargingType) {
            if (chargingType == null) {
                throw new MissingRequiredPropertyException("Pav2MeterDetailsResponse", "chargingType");
            }
            this.chargingType = chargingType;
            return this;
        }
        @CustomType.Setter
        public Builder meterGuid(String meterGuid) {
            if (meterGuid == null) {
                throw new MissingRequiredPropertyException("Pav2MeterDetailsResponse", "meterGuid");
            }
            this.meterGuid = meterGuid;
            return this;
        }
        @CustomType.Setter
        public Builder multiplier(Double multiplier) {
            if (multiplier == null) {
                throw new MissingRequiredPropertyException("Pav2MeterDetailsResponse", "multiplier");
            }
            this.multiplier = multiplier;
            return this;
        }
        public Pav2MeterDetailsResponse build() {
            final var o = new Pav2MeterDetailsResponse();
            o.billingType = billingType;
            o.chargingType = chargingType;
            o.meterGuid = meterGuid;
            o.multiplier = multiplier;
            return o;
        }
    }
}
