// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.legacy_names.HTTP_module.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RequestArgs extends com.pulumi.resources.ResourceArgs {

    public static final RequestArgs Empty = new RequestArgs();

    @Import(name="URL")
    private @Nullable Output<String> URL;

    public Optional<Output<String>> URL() {
        return Optional.ofNullable(this.URL);
    }

    @Import(name="content_body")
    private @Nullable Output<String> content_body;

    public Optional<Output<String>> content_body() {
        return Optional.ofNullable(this.content_body);
    }

    private RequestArgs() {}

    private RequestArgs(RequestArgs $) {
        this.URL = $.URL;
        this.content_body = $.content_body;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RequestArgs $;

        public Builder() {
            $ = new RequestArgs();
        }

        public Builder(RequestArgs defaults) {
            $ = new RequestArgs(Objects.requireNonNull(defaults));
        }

        public Builder URL(@Nullable Output<String> URL) {
            $.URL = URL;
            return this;
        }

        public Builder URL(String URL) {
            return URL(Output.of(URL));
        }

        public Builder content_body(@Nullable Output<String> content_body) {
            $.content_body = content_body;
            return this;
        }

        public Builder content_body(String content_body) {
            return content_body(Output.of(content_body));
        }

        public RequestArgs build() {
            return $;
        }
    }

}
